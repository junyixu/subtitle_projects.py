name: Automated Subtitle Translation

on:
  push:
    paths:
      - 'subtitles/*.srt'
      - 'subtitles/**/*.srt'
  pull_request:
    paths:
      - 'subtitles/*.srt'
      - 'subtitles/**/*.srt'
  workflow_dispatch:
    inputs:
      subtitle_file:
        description: 'Subtitle file to translate'
        required: true
        type: string
      target_language:
        description: 'Target language'
        required: false
        default: 'chinese'
        type: choice
        options:
          - chinese
          - english
          - japanese
          - korean
      provider:
        description: 'LLM Provider'
        required: false
        default: 'gemini'
        type: choice
        options:
          - gemini
          - zhipu
          - qwen
          - openai

env:
  PYTHON_VERSION: '3.11'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      subtitle-files: ${{ steps.changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Detect subtitle file changes
        id: changes
        run: |
          # 手动检测变化的字幕文件
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Manual trigger, skipping file detection"
            echo "changes=[]" >> $GITHUB_OUTPUT
          else
            # 获取变化的字幕文件
            files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '\.srt$' | grep -E '^subtitles/' | jq -R -s -c 'split("\n") | map(select(. != ""))')
            if [ -z "$files" ] || [ "$files" = "[]" ]; then
              files="[]"
            fi
            echo "changes=$files" >> $GITHUB_OUTPUT
            echo "Detected files: $files"
          fi

  translate-subtitles:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ github.event_name != 'workflow_dispatch' && needs.detect-changes.outputs.subtitle-files != '[]' }}
    strategy:
      matrix:
        subtitle-file: ${{ fromJson(needs.detect-changes.outputs.subtitle-files) }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pysrt rich typer aiohttp google-generativeai openai anthropic zhipuai

      - name: Setup project workspace
        run: mkdir -p subtitle_projects

      - name: Create and translate
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ZHIPU_API_KEY: ${{ secrets.ZHIPU_API_KEY }}
          QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          filename=$(basename "${{ matrix.subtitle-file }}")
          project_name="${filename%.*}"
          python subtitle-translator.py create "$project_name" "${{ matrix.subtitle-file }}" --provider ${{ github.event.inputs.provider || 'gemini' }}
          python subtitle-translator.py translate "$project_name"
          python subtitle-translator.py export "$project_name" -o "translated_${filename}"

      - name: Upload translated subtitles
        uses: actions/upload-artifact@v4
        with:
          name: translated-subtitles
          path: translated_*.srt
          retention-days: 30

  manual-translation:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pysrt rich typer aiohttp google-generativeai openai anthropic zhipuai

      - name: Setup project workspace
        run: mkdir -p subtitle_projects

      - name: Create and translate project
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ZHIPU_API_KEY: ${{ secrets.ZHIPU_API_KEY }}
          QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          filename=$(basename "${{ github.event.inputs.subtitle_file }}")
          project_name="${filename%.*}"
          python subtitle-translator.py create "$project_name" "${{ github.event.inputs.subtitle_file }}" --provider ${{ github.event.inputs.provider }}
          python subtitle-translator.py translate "$project_name"
          python subtitle-translator.py export "$project_name" -o "translated_${filename}"

      - name: Upload translation results
        uses: actions/upload-artifact@v4
        with:
          name: manual-translation-${{ github.run_number }}
          path: |
            translated_*.srt
            subtitle_projects/*/translation.log
          retention-days: 90